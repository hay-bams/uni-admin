[{"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/index.tsx":"1","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/reportWebVitals.ts":"2","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/Home/index.tsx":"3","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/NotFound/index.tsx":"4","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/AppHeader/index.tsx":"5","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/AppHeader/components/MenuItems/index.tsx":"6","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/index.ts":"7","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/students/index.ts":"8","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/utils/formatTableData.ts":"9","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/Students/index.tsx":"10","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/Students/components/Students/index.tsx":"11","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/index.ts":"12","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/Students/index.ts":"13","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/Sidebar/index.tsx":"14","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/StudentDetails/index.ts":"15","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/StudentDetails/index.tsx":"16","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/StudentDetails/components/Courses/index.tsx":"17","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/AllCourses/index.ts":"18","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/mutations/AddCourses/index.ts":"19","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/utils/index.ts":"20","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/BreadCrumbNav/index.tsx":"21","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/index.ts":"22","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/StudentTableSkeleton/index.tsx":"23","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/CourseTableSkeleton/index.tsx":"24","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/AppHeaderSkeleton/index.tsx":"25"},{"size":1717,"mtime":1608478494328,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1608291504687,"results":"28","hashOfConfig":"27"},{"size":91,"mtime":1608294624012,"results":"29","hashOfConfig":"27"},{"size":100,"mtime":1608294705017,"results":"30","hashOfConfig":"27"},{"size":507,"mtime":1608297795617,"results":"31","hashOfConfig":"27"},{"size":1060,"mtime":1608297761025,"results":"32","hashOfConfig":"27"},{"size":151,"mtime":1608471583718,"results":"33","hashOfConfig":"27"},{"size":328,"mtime":1608458353134,"results":"34","hashOfConfig":"27"},{"size":285,"mtime":1608410257763,"results":"35","hashOfConfig":"27"},{"size":1313,"mtime":1608475528142,"results":"36","hashOfConfig":"27"},{"size":1992,"mtime":1608475465121,"results":"37","hashOfConfig":"27"},{"size":137,"mtime":1608463026203,"results":"38","hashOfConfig":"27"},{"size":328,"mtime":1608458353134,"results":"39","hashOfConfig":"27"},{"size":1160,"mtime":1608474346522,"results":"40","hashOfConfig":"27"},{"size":273,"mtime":1608464551318,"results":"41","hashOfConfig":"27"},{"size":1858,"mtime":1608476841356,"results":"42","hashOfConfig":"27"},{"size":5332,"mtime":1608473516508,"results":"43","hashOfConfig":"27"},{"size":187,"mtime":1608466740638,"results":"44","hashOfConfig":"27"},{"size":204,"mtime":1608471438583,"results":"45","hashOfConfig":"27"},{"size":408,"mtime":1608472872009,"results":"46","hashOfConfig":"27"},{"size":334,"mtime":1608464501523,"results":"47","hashOfConfig":"27"},{"size":170,"mtime":1608478426513,"results":"48","hashOfConfig":"27"},{"size":3483,"mtime":1608476650035,"results":"49","hashOfConfig":"27"},{"size":3756,"mtime":1608477383577,"results":"50","hashOfConfig":"27"},{"size":367,"mtime":1608478511333,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15xrfud",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/index.tsx",["110","111","112"],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/reportWebVitals.ts",[],["113","114"],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/Home/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/NotFound/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/AppHeader/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/AppHeader/components/MenuItems/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/students/index.ts",[],["115","116"],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/utils/formatTableData.ts",["117"],"import { Students_students_results } from \"../graphql/queries/students/__generated__/Students\"\n\nexport const formatTableData = (data: any[] | undefined) => {\n  return data && data.map((datum) => {\n    console.log(datum)\n    return {\n      ...datum,\n      key: `${datum.id}`,\n    }\n  })\n}",["118","119"],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/Students/index.tsx",["120"],"import React, { useState } from 'react';\nimport { Layout } from 'antd';\nimport { Sidebar } from '../../lib/components/Sidebar';\nimport { BreadCrumbNav } from '../../lib/components/BreadCrumbNav';\nimport { Students } from './components/Students';\nimport { useQuery } from '@apollo/client';\nimport { STUDENTS } from '../../graphql';\nimport {\n  StudentsVariables,\n  Students as StudentsData,\n} from '../../graphql/queries/Students/__generated__/Students';\nimport { StudentSkeleton } from '../../lib/components';\n\nconst { Content } = Layout;\n\nconst LIMIT = 2;\n\nexport const AllStudents = () => {\n  const [page, _] = useState(1);\n  const { data, loading, error } = useQuery<StudentsData, StudentsVariables>(\n    STUDENTS,\n    {\n      variables: {\n        all: 'all',\n        limit: LIMIT,\n        page: page,\n      },\n    }\n  );\n\n  const StudentsRender =\n    data && data.students && data.students.results ? (\n      <Students loading={loading} students={data?.students.results} />\n    ) : null;\n\n  if (loading) {\n    return <StudentSkeleton />\n  }\n\n  if (error) {\n  }\n  return (\n    <Layout>\n      <Sidebar />\n      <Layout>\n        <Content style={{ padding: '0 50px' }}>\n          <BreadCrumbNav paths={['Home', 'All_Students']} />\n          {StudentsRender}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/Students/components/Students/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/Students/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/Sidebar/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/StudentDetails/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/StudentDetails/index.tsx",["121"],"import React from 'react';\nimport { Layout } from 'antd';\nimport { Sidebar } from '../../lib/components/Sidebar';\nimport { BreadCrumbNav, CourseTableSkeleton } from '../../lib/components';\nimport { Courses } from './components/Courses';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { STUDENT_DETAILS, All_COURSES } from '../../graphql';\nimport {\n  studentDetailsVariables,\n  studentDetails as StudentsDetailsData,\n} from '../../graphql/queries/StudentDetails/__generated__/studentDetails';\nimport { AllCourses as AllCoursesData } from '../../graphql/queries/AllCourses/__generated__/AllCourses';\n\ninterface MatchParams {\n  id: string;\n}\n\nconst { Content } = Layout;\n\nexport const StudentDetails = ({ match }: RouteComponentProps<MatchParams>) => {\n  const {\n    data: StudentData,\n    loading: StudentLoading,\n    error: StudentError,\n    refetch: studentRefetch\n  } = useQuery<StudentsDetailsData, studentDetailsVariables>(STUDENT_DETAILS, {\n    variables: {\n      id: match.params.id,\n    },\n  });\n\n  const {\n    data: CoursesData,\n    loading: CoursesLoading,\n    error: CoursesError,\n    refetch: courseRefetch\n  } = useQuery<AllCoursesData>(All_COURSES);\n\n  const CoursesRender =\n    (\n      <Courses\n        student={StudentData?.studentDetails}\n        studentRefetch={studentRefetch}\n        courseRefetch={courseRefetch}\n        courses={CoursesData?.allCourses}\n      />\n    ) || null;\n\n  if (StudentLoading) {\n  }\n\n  if(CoursesLoading) {\n    return (\n      <CourseTableSkeleton />\n    )\n  }\n\n  if (StudentError) {\n  }\n\n  return (\n    <Layout>\n      <Sidebar />\n      <Layout>\n        <Content style={{ padding: '0 50px' }}>\n          <BreadCrumbNav paths={['Home', 'All_Sudents', 'Student_Details']} />\n          {CoursesRender}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/pages/StudentDetails/components/Courses/index.tsx",["122","123","124"],"import React from 'react';\nimport { Table, Tag, Typography, Row, Col, Button } from 'antd';\nimport {\n  studentDetails_studentDetails,\n  studentDetails_studentDetails_courses,\n} from '../../../../graphql/queries/StudentDetails/__generated__/studentDetails';\nimport { AllCourses_allCourses } from '../../../../graphql/queries/AllCourses/__generated__/AllCourses';\nimport { useMutation } from '@apollo/client';\nimport { ADD_COURSES } from '../../../../graphql';\nimport {\n  AddCourse as AddCourseData,\n  AddCourseVariables,\n} from '../../../../graphql/mutations/AddCourses/__generated__/AddCourse';\nimport { displaySuccessNotification } from '../../../../utils';\n\ninterface Props {\n  student?: studentDetails_studentDetails;\n  courses?: AllCourses_allCourses[];\n  studentRefetch: any;\n  courseRefetch: any;\n}\n\nconst { Title } = Typography;\n\nexport const Courses = ({\n  student,\n  studentRefetch,\n  courses,\n  courseRefetch,\n}: Props) => {\n  const [addCourse, { data, loading, error }] = useMutation<\n    AddCourseData,\n    AddCourseVariables\n  >(ADD_COURSES, {\n    onCompleted: (data) => {\n      if (data.addCourses) {\n        studentRefetch();\n        courseRefetch();\n        displaySuccessNotification('Course Registered Successfully');\n      }\n    },\n  });\n\n  const registerCourse = (studentId: string, courseId: string) => {\n    addCourse({\n      variables: {\n        studentId,\n        input: courseId,\n      },\n    });\n  };\n\n  const unregisterCourse  = (studentId: string, courseId: string) => {}\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      className: 'table_column',\n      width: 100,\n      key: 'name',\n      fixed: 'left' as 'left',\n    },\n    {\n      title: 'Category',\n      dataIndex: 'category',\n      className: 'table_column',\n      width: 100,\n      key: 'category',\n    },\n    {\n      title: 'Total Seats',\n      dataIndex: 'totalSeats',\n      className: 'table_column',\n      width: 100,\n      key: 'totalSeats',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      className: 'table_column',\n      width: 100,\n      key: 'status',\n      render: (\n        status: string,\n        record: studentDetails_studentDetails_courses,\n        index: number\n      ) => {\n        return (\n          <Tag color={'green'} key={status}>\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const registeredTableColumns = [\n    ...columns,\n    {\n      title: 'Remove',\n      dataIndex: 'remove',\n      className: 'table_column',\n      width: 100,\n      key: 'remove',\n      render: (\n        remove: string,\n        record: studentDetails_studentDetails_courses,\n        index: number\n      ) => {\n        const removeButton =\n          student && student.id ? (\n            <Button\n              onClick={() => unregisterCourse(student?.id, record.id)}\n              danger\n            >\n              {remove}\n            </Button>\n          ) : null;\n        return removeButton;\n      },\n    },\n\n  ]\n\n  const unregisteredTableColumns = [\n    ...columns,\n    {\n      title: 'Register',\n      dataIndex: 'register',\n      className: 'table_column',\n      width: 100,\n      key: 'register',\n      render: (\n        register: string,\n        record: studentDetails_studentDetails_courses,\n        index: number\n      ) => {\n        const registerButton =\n          student && student.id ? (\n            <Button\n              onClick={() => registerCourse(student?.id, record.id)}\n              type=\"primary\"\n              ghost\n            >\n              {register}\n            </Button>\n          ) : null;\n        return registerButton;\n      },\n    },\n  ];\n\n  const registeredCourses: any =\n    student && student.courses\n      ? student.courses.map(\n          (course: studentDetails_studentDetails_courses) => ({\n            ...course,\n            key: `${course.id}`,\n            remove: 'remove'\n          })\n        )\n      : [];\n\n  const unregisteredCourses = [];\n  const hashMap = new Map();\n\n  if (registeredCourses) {\n    for (const course of registeredCourses) {\n      hashMap.set(course.id, course.id);\n    }\n  }\n\n  if (courses) {\n    for (const course of courses) {\n      if (!hashMap.get(course.id)) {\n        unregisteredCourses.push({\n          ...course,\n          key: `${course.id}`,\n          register: 'register',\n        });\n      }\n    }\n  }\n\n  return (\n    <div className=\"table_container\">\n      <Title level={3}>{student?.name}</Title>\n      <Row gutter={24} justify=\"space-between\" className=\"courses\">\n        <Col xs={24} lg={12} className=\"registered_courses\">\n          <Table\n            columns={registeredTableColumns}\n            pagination={false}\n            dataSource={registeredCourses}\n            rowClassName=\"table_row\"\n            scroll={{ x: '50vw', y: '50vh' }}\n            className=\"registered_course_table\"\n            title={() => <Title level={5}>Registered Courses</Title>}\n          />\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Table\n            columns={unregisteredTableColumns}\n            pagination={false}\n            dataSource={unregisteredCourses}\n            rowClassName=\"table_row\"\n            scroll={{ x: '50vw', y: '50vh' }}\n            title={() => <Title level={5}>Unregistered Courses</Title>}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/queries/AllCourses/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/graphql/mutations/AddCourses/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/utils/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/BreadCrumbNav/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/index.ts",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/StudentTableSkeleton/index.tsx",[],"/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/CourseTableSkeleton/index.tsx",["125"],"import React from 'react';\nimport { Col, Layout, Row, Skeleton, Table } from 'antd';\nimport { Sidebar } from '../Sidebar';\nimport { BreadCrumbNav } from '../BreadCrumbNav';\nimport Title from 'antd/lib/skeleton/Title';\n\nconst { Content } = Layout;\n\nexport const CourseTableSkeleton = () => {\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      className: 'table_column',\n      width: 100,\n      key: 'name',\n      fixed: 'left' as 'left',\n    },\n    {\n      title: 'Cateogry',\n      dataIndex: 'category',\n      className: 'table_column',\n      width: 100,\n      key: 'category',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      className: 'table_column',\n      width: 100,\n      key: 'status',\n    },\n    {\n      title: 'Total Seats',\n      dataIndex: 'totalSeats',\n      className: 'table_column',\n      width: 100,\n      key: 'totalSeats',\n    },\n  ];\n\n  const data = [\n    {\n      key: '1',\n      name: <Skeleton paragraph={{ rows: 0 }} />,\n      category: <Skeleton paragraph={{ rows: 0 }} />,\n      totalSeats: <Skeleton paragraph={{ rows: 0 }} />,\n      status: <Skeleton paragraph={{ rows: 0 }} />,\n    },\n    {\n      key: '2',\n      name: <Skeleton paragraph={{ rows: 0 }} />,\n      category: <Skeleton paragraph={{ rows: 0 }} />,\n      totalSeats: <Skeleton paragraph={{ rows: 0 }} />,\n      status: <Skeleton paragraph={{ rows: 0 }} />,\n    },\n    {\n      key: '3',\n      name: <Skeleton paragraph={{ rows: 0 }} />,\n      category: <Skeleton paragraph={{ rows: 0 }} />,\n      totalSeats: <Skeleton paragraph={{ rows: 0 }} />,\n      status: <Skeleton paragraph={{ rows: 0 }} />,\n    },\n    {\n      key: '4',\n      name: <Skeleton paragraph={{ rows: 0 }} />,\n      category: <Skeleton paragraph={{ rows: 0 }} />,\n      totalSeats: <Skeleton paragraph={{ rows: 0 }} />,\n      status: <Skeleton paragraph={{ rows: 0 }} />,\n    },\n    {\n      key: '5',\n      name: <Skeleton paragraph={{ rows: 0 }} />,\n      category: <Skeleton paragraph={{ rows: 0 }} />,\n      totalSeats: <Skeleton paragraph={{ rows: 0 }} />,\n      status: <Skeleton paragraph={{ rows: 0 }} />,\n    },\n  ];\n  return (\n    <Layout>\n      <Sidebar />\n      <Layout>\n        <Content style={{ padding: '0 50px' }}>\n          <BreadCrumbNav paths={['Home', 'All_Sudents', 'Student_Details']} />\n          <div className=\"table_container\">\n            <Skeleton\n              paragraph={{ rows: 0 }}\n              className=\"user_listing_skeleton\"\n            />\n            <Row gutter={24} justify=\"space-between\" className=\"courses\">\n              <Col xs={24} lg={12} className=\"registered_courses\">\n                <Table\n                  columns={columns}\n                  pagination={false}\n                  dataSource={data}\n                  rowClassName=\"table_row\"\n                  scroll={{ x: '50vw', y: '50vh' }}\n                  className=\"registered_course_table\"\n                  title={() => (\n                    <Skeleton\n                      paragraph={{ rows: 0 }}\n                      className=\"user_listing_skeleton\"\n                    />\n                  )}\n                />\n              </Col>\n\n              <Col xs={24} lg={12}>\n                <Table\n                  columns={columns}\n                  pagination={false}\n                  dataSource={data}\n                  rowClassName=\"table_row\"\n                  scroll={{ x: '50vw', y: '50vh' }}\n                  title={() => (\n                    <Skeleton\n                      paragraph={{ rows: 0 }}\n                      className=\"user_listing_skeleton\"\n                    />\n                  )}\n                />\n              </Col>\n            </Row>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","/Users/ayobamiadelakun/Documents/projects/uni-admin/client/src/lib/components/AppHeaderSkeleton/index.tsx",[],{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"130","line":5,"column":18,"nodeType":"128","messageId":"129","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"131","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":27},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"132","replacedBy":"136"},{"ruleId":"134","replacedBy":"137"},{"ruleId":"126","severity":1,"message":"138","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"132","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"126","severity":1,"message":"141","line":19,"column":16,"nodeType":"128","messageId":"129","endLine":19,"endColumn":17},{"ruleId":"126","severity":1,"message":"142","line":36,"column":12,"nodeType":"128","messageId":"129","endLine":36,"endColumn":24},{"ruleId":"126","severity":1,"message":"143","line":31,"column":23,"nodeType":"128","messageId":"129","endLine":31,"endColumn":27},{"ruleId":"126","severity":1,"message":"144","line":31,"column":29,"nodeType":"128","messageId":"129","endLine":31,"endColumn":36},{"ruleId":"126","severity":1,"message":"145","line":31,"column":38,"nodeType":"128","messageId":"129","endLine":31,"endColumn":43},{"ruleId":"126","severity":1,"message":"146","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":13},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Spin' is defined but never used.","'AppHeaderSkeleton' is defined but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"'Students_students_results' is defined but never used.",["147"],["148"],"'_' is assigned a value but never used.","'CoursesError' is assigned a value but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Title' is defined but never used.","no-global-assign","no-unsafe-negation"]